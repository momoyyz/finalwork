<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.2.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
          
			<!-- 阿里巴巴连接池   数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
	    

	    <property name="url" value="${mysql.url}" />
		<property name="username" value="${mysql.username}" />
		<property name="password" value="${mysql.password}" />
		<!-- 连接池启动时创建的初始化连接数量-->
		<property name="initialSize" value="3" />
		<!--连接池中可同时连接的最大的连接数  -->
		<property name="maxActive" value="30" />
		<!--连接池中最大的空闲的连接数，超过的空闲连接将被释放，如果设置为负数表示不限制  -->
		<property name="maxIdle" value="6" />
		<!-- 连接池中最小的空闲的连接数，低于这个数量会被创建新的连接
		<property name="minIdle" value="6" /> -->
		<!--空闲时是否进行验证，检查对象是否有效，默认为false   -->
		<property name="testWhileIdle" value="true" />
		<!--取得对象时是否进行验证，检查对象是否有效，默认为false   -->
		<property name="testOnBorrow" value="true" />
		<!-- 测试/验证连接池连接的SQL语句 -->
		<property name="validationQuery" value="select 1" />
	</bean>
		
  <bean id="log-psdsstatistics-filter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
    <property name="statementExecutableSqlLogEnable" value="true" />
  </bean>
	
	<!-- 事务配置 -->  
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  

    <!-- 使用annotation注解方式配置事务 -->  
    <tx:annotation-driven transaction-manager="transactionManager"/>  
	
	
</beans>